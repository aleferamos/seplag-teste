-- gestor_servidor."role" definição

-- Drop table

-- DROP TABLE gestor_servidor."role";

CREATE TABLE gestor_servidor."role" (
	codg_role int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	nome varchar(255) NOT NULL,
	CONSTRAINT role_pkey PRIMARY KEY (codg_role),
	CONSTRAINT uk_role_nome UNIQUE (nome)
);


-- gestor_servidor.usuario definição

-- Drop table

-- DROP TABLE gestor_servidor.usuario;

CREATE TABLE gestor_servidor.usuario (
	codg_usuario serial4 NOT NULL,
	email varchar NOT NULL,
	senha varchar NOT NULL,
	created_at timestamp(6) NOT NULL,
	updated_at timestamp(6) NOT NULL,
	CONSTRAINT usuario_pk PRIMARY KEY (codg_usuario)
);


-- gestor_servidor.cidade definição

-- Drop table

-- DROP TABLE gestor_servidor.cidade;

CREATE TABLE gestor_servidor.cidade (
	cid_id serial4 NOT NULL,
	cid_nome varchar(200) NULL,
	cid_uf bpchar(2) NULL,
	CONSTRAINT cidade_pk PRIMARY KEY (cid_id)
);


-- gestor_servidor.unidade definição

-- Drop table

-- DROP TABLE gestor_servidor.unidade;

CREATE TABLE gestor_servidor.unidade (
	unid_id serial4 NOT NULL,
	unid_nome varchar(200) NULL,
	unid_sigla varchar(20) NULL,
	CONSTRAINT unidade_pk PRIMARY KEY (unid_id)
);


-- gestor_servidor.pessoa definição

-- Drop table

-- DROP TABLE gestor_servidor.pessoa;

CREATE TABLE gestor_servidor.pessoa (
	pes_id serial4 NOT NULL,
	pes_nome varchar(200) NULL,
	pes_data_nascimento date NULL,
	pes_sexo varchar(9) NULL,
	pes_mae varchar(200) NULL,
	pes_pai varchar(200) NULL,
	CONSTRAINT pessoa_pk PRIMARY KEY (pes_id)
);


-- gestor_servidor.usuario_roles definição

-- Drop table

-- DROP TABLE gestor_servidor.usuario_roles;

CREATE TABLE gestor_servidor.usuario_roles (
	codg_usuario int8 NOT NULL,
	codg_role int8 NOT NULL,
	CONSTRAINT usuario_roles_pkey PRIMARY KEY (codg_usuario, codg_role),
	CONSTRAINT fk3t77lxrs76nthhni13ctc7dlj FOREIGN KEY (codg_role) REFERENCES gestor_servidor."role"(codg_role),
	CONSTRAINT fkqblnumndby0ftm4c7sg6uso6p FOREIGN KEY (codg_usuario) REFERENCES gestor_servidor.usuario(codg_usuario)
);


-- gestor_servidor.endereco definição

-- Drop table

-- DROP TABLE gestor_servidor.endereco;

CREATE TABLE gestor_servidor.endereco (
	end_id serial4 NOT NULL,
	end_tipo_logradouro varchar(50) NULL,
	end_logradouro varchar(200) NULL,
	end_numero int4 NULL,
	end_bairro varchar(100) NULL,
	cid_id int4 NULL,
	CONSTRAINT endereco_pk PRIMARY KEY (end_id),
	CONSTRAINT endereco_cidade_fk FOREIGN KEY (cid_id) REFERENCES gestor_servidor.cidade(cid_id)
);


-- gestor_servidor.unidade_endereco definição

-- Drop table

-- DROP TABLE gestor_servidor.unidade_endereco;

CREATE TABLE gestor_servidor.unidade_endereco (
	unid_id int4 NOT NULL,
	end_id int4 NOT NULL,
	CONSTRAINT unidade_endereco_endereco_fk FOREIGN KEY (end_id) REFERENCES gestor_servidor.endereco(end_id),
	CONSTRAINT unidade_endereco_unidade_fk FOREIGN KEY (unid_id) REFERENCES gestor_servidor.unidade(unid_id)
);


-- gestor_servidor.lotacao definição

-- Drop table

-- DROP TABLE gestor_servidor.lotacao;

CREATE TABLE gestor_servidor.lotacao (
	lot_id serial4 NOT NULL,
	pes_id int4 NULL,
	unid_id int4 NULL,
	lot_data_lotacao date NULL,
	lot_data_remocao date NULL,
	lot_portaria varchar(100) NULL,
	CONSTRAINT lotacao_pk PRIMARY KEY (lot_id),
	CONSTRAINT lotacao_pessoa_fk FOREIGN KEY (pes_id) REFERENCES gestor_servidor.pessoa(pes_id),
	CONSTRAINT lotacao_unidade_fk FOREIGN KEY (unid_id) REFERENCES gestor_servidor.unidade(unid_id)
);


-- gestor_servidor.pessoa_endereco definição

-- Drop table

-- DROP TABLE gestor_servidor.pessoa_endereco;

CREATE TABLE gestor_servidor.pessoa_endereco (
	pes_id int4 NOT NULL,
	end_id int4 NOT NULL,
	CONSTRAINT pessoa_endereco_endereco_fk FOREIGN KEY (end_id) REFERENCES gestor_servidor.endereco(end_id),
	CONSTRAINT pessoa_endereco_pessoa_fk FOREIGN KEY (pes_id) REFERENCES gestor_servidor.pessoa(pes_id)
);


-- gestor_servidor.foto_pessoa definição

-- Drop table

-- DROP TABLE gestor_servidor.foto_pessoa;

CREATE TABLE gestor_servidor.foto_pessoa (
	fp_id serial4 NOT NULL,
	pes_id int4 NOT NULL,
	fp_data date NULL,
	fp_bucket varchar(50) NULL,
	fp_hsh varchar(50) NULL,
	CONSTRAINT foto_pessoa_pk PRIMARY KEY (fp_id),
	CONSTRAINT foto_pessoa_pessoa_fk FOREIGN KEY (pes_id) REFERENCES gestor_servidor.pessoa(pes_id)
);


-- gestor_servidor.servidor_efetivo definição

-- Drop table

-- DROP TABLE gestor_servidor.servidor_efetivo;

CREATE TABLE gestor_servidor.servidor_efetivo (
	se_id serial4 NOT NULL,
	pes_id int4 NOT NULL,
	se_matricula varchar(20) NULL,
	CONSTRAINT servidor_efetivo_pk PRIMARY KEY (se_id),
	CONSTRAINT servidor_efetivo_pessoa_fk FOREIGN KEY (pes_id) REFERENCES gestor_servidor.pessoa(pes_id)
);


-- gestor_servidor.servidor_temporario definição

-- Drop table

-- DROP TABLE gestor_servidor.servidor_temporario;

CREATE TABLE gestor_servidor.servidor_temporario (
	st_id serial4 NOT NULL,
	pes_id int4 NOT NULL,
	st_data_admissao date NULL,
	st_data_demissao date NULL,
	CONSTRAINT servidor_temporario_pk PRIMARY KEY (st_id),
	CONSTRAINT servidor_temporario_pessoa_fk FOREIGN KEY (pes_id) REFERENCES gestor_servidor.pessoa(pes_id)
);